
name: Migrate Code Scanning Alerts

on:
  workflow_dispatch:  # Allows manual triggering of the workflow

jobs:
  Downloading_from_source:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install jq (if not available)
        run: sudo apt-get install -y jq

      - name: Create SARIF directory
        run: mkdir -p sarif_reports

      - name: Set up GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install gh
        env:
          GH_TOKEN: ${{ secrets.SOURCE_TOKEN }}
          
      - name: List and download SARIF files from the source repository
        env:
          GH_TOKEN: ${{ secrets.SOURCE_TOKEN }}
        run: |
          # List all analysis runs and retrieve each SARIF file
          analysis_ids=$(gh api -X GET "/repos/sam-org1/s_repo1/code-scanning/analyses" -H "Authorization: token $GH_TOKEN" | jq -r '.[].id')
          for analysis_id in $analysis_ids; do
            gh api -X GET "/repos/sam-org1/s_repo1/code-scanning/analyses/$analysis_id" -H "Authorization: token $GH_TOKEN" --jq '.sarif' > "sarif_reports/analysis_${analysis_id}.sarif"
            echo "Downloaded SARIF for analysis ID: $analysis_id"
          done

      - name: Upload SARIF artifacts
        uses: actions/upload-artifact@v3
        with:
          name: sarif-reports
          path: sarif_reports/
          
  upload_to_target_repo:
    needs: Downloading_from_source  # Ensures the second job runs after SARIF files are downloaded
    runs-on: ubuntu-latest

    steps:
      - name: Download SARIF artifact
        uses: actions/download-artifact@v3
        with:
          name: sarif-reports
          path: sarif_reports/

      - name: Authenticate with GitHub CLI for target repository
        env:
          GH_TOKEN: ${{ secrets.TARGET_TOKEN }}
        run: |
          sudo apt-get update
          sudo apt-get install gh
          gh auth login --with-token ${{ secrets.TARGET_TOKEN }}

      - name: Upload SARIF files to target repository
        env:
          GH_TOKEN: ${{ secrets.TARGET_TOKEN }}
        run: |
          TARGET_REPO="sam-org2/s_repo3"  # Replace with the target repository (e.g., "my-org/my-duplicate-repo")
          
          # Loop through each SARIF file and upload it to the target repository
          for sarif_file in sarif_reports/*.sarif; do
            echo "Uploading $sarif_file to $TARGET_REPO"
            gh api -X POST \
              -H "Authorization: token $GH_TOKEN" \
              -H "Accept: application/vnd.github+json" \
              "/repos/$TARGET_REPO/code-scanning/sarifs" \
              -F "commit_sha=$(git rev-parse HEAD)" \
              -F "ref=refs/heads/main" \
              -F "sarif=@$sarif_file" \
              -F "checkout_uri=$(pwd)"
          done
